--- ASTAnnotation.java	2006-07-23 08:52:18.000000000 -0400
+++ /home/jpace/src/pmd/src/net/sourceforge/pmd/ast/ASTAnnotation.java	2006-03-07 20:51:52.000000000 -0500
@@ -1,6 +1,8 @@
 /* Generated By:JJTree: Do not edit this line. ASTAnnotation.java */
+
 package net.sourceforge.pmd.ast;
 
+import net.sourceforge.pmd.Rule;
 
 public class ASTAnnotation extends SimpleJavaNode {
     public ASTAnnotation(int id) {
@@ -11,6 +13,56 @@
         super(p, id);
     }
 
+
+    public boolean suppresses(Rule rule) {
+        /*  Check for "suppress all warnings" case
+          @SuppressWarnings("")
+          TypeDeclaration
+          Annotation
+           NormalAnnotation
+            Name:SuppressWarnings
+        */
+        if (jjtGetChild(0) instanceof ASTSingleMemberAnnotation) {
+            ASTSingleMemberAnnotation n = (ASTSingleMemberAnnotation) jjtGetChild(0);
+            if (n.jjtGetChild(0) instanceof ASTName && ((ASTName) n.jjtGetChild(0)).getImage().equals("SuppressWarnings")) {
+                return true;
+            }
+            return false;
+        }
+
+        /* Check for "suppress some warnings" case
+         @SuppressWarnings({"hi","hey"})
+         TypeDeclaration
+          Annotation
+           SingleMemberAnnotation
+            Name:SuppressWarnings
+            MemberValue
+             MemberValueArrayInitializer
+              MemberValue
+               PrimaryExpression
+                PrimaryPrefix
+                 Literal:"hi"
+              MemberValue
+               PrimaryExpression
+                PrimaryPrefix
+                 Literal:"hey"
+        */
+/*
+
+        if (!(jjtGetChild(0) instanceof ASTName)) {
+            return false;
+        }
+        ASTName n = (ASTName)jjtGetChild(0);
+        if (n.getImage() == null || n.getImage().equals("SuppressWarnings")) {
+            return false;
+        }
+
+        //List values = findChildrenOfType()
+*/
+        return false;
+    }
+
+
     /**
      * Accept the visitor. *
      */

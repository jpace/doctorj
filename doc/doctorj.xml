<!DOCTYPE refentry PUBLIC 
   "-//OASIS//DTD DocBook XML V4.1.2//EN"
   "docbook/docbookx.dtd">
<refentry id='doctorj.1'>

<refmeta>
    <refentrytitle>doctorj</refentrytitle>
    <manvolnum>1</manvolnum>
</refmeta>

<refnamediv id='name'>
    <refname>doctorj</refname>
    <refpurpose>Javadoc analyzer and spell-checker</refpurpose>
</refnamediv>

<refsynopsisdiv id='synopsis'>
    <cmdsynopsis>
        <command>doctorj</command>  
        <arg choice='opt'><option>--emacs</option></arg>
        <arg choice='opt'><option>--level</option><replaceable>=LEVEL</replaceable></arg>
        <arg choice='opt'><option>--warning</option><replaceable>=LEVEL</replaceable></arg>
        <arg choice='opt'><option>--tabwidth</option><replaceable>=NUM</replaceable></arg>
        <arg choice='opt'><option>--dictionaries</option><replaceable>=LIST</replaceable></arg>
        <arg choice='opt'><option>--source</option><replaceable>=VERSION</replaceable></arg>
        <arg choice='opt'><option>--verbose</option></arg>
        <arg choice='req'><replaceable>FILE...</replaceable></arg>
    </cmdsynopsis>
</refsynopsisdiv>

<refsect1>
    <title>Description</title>

    <para><application>doctorj</application> is an application to analyze
    Javadoc comments against Java code, verifying its integrity and format. It
    also spell-checks Javadoc comments.</para>

</refsect1>

<refsect1>
    <title>Options</title>

    <variablelist>
        <varlistentry>
            <term><option>--emacs</option></term>
            <listitem>
                <para>Whether to list violations in Emacs form, i.e., a single
                line of the form:</para>

                <para><computeroutput>8:48:9:4: An error occurred on this line.</computeroutput>
                </para>

                <para>By default, violations are displayed in <quote>long
                form</quote>, showing the context.</para>
            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>--level</option><replaceable>=LEVEL</replaceable></term>
            <listitem>

                <para>Sets the warning/error level. A level of 0 will result in
                only errors reported. A level of 1 means that Javadoc for public
                and abstract items (classes, interfaces, methods, constructors,
                and fields) will be checked. A level of 2 will result in the
                addition of checking of protected-access items; 3 is for
                package-access items, and 4 will check all items. The default is
                4.</para>

            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>--warning</option><replaceable>=LEVEL</replaceable></term>
            <listitem>

                <para>This is the same as --level; it exists for backward
                compatibility, and is deprecated.</para>

            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>--tabwidth</option><replaceable>=NUM</replaceable></term>
            <listitem>

                <para>Sets the number of spaces to use for alignment with tabs. 
                By default, this value is 4.</para>

            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>--dictionaries</option><replaceable>=LIST</replaceable></term>
            <listitem>

                <para>Sets the dictionaries (word lists) to use for
                spell-checking. <replaceable>LIST</replaceable> is a
                comma-delimited string of paths to the word list files. By
                default, <application>doctorj</application> uses the word list
                at <filename>/usr/share/doctorj/words.LOCALE</filename>, where
                <replaceable>LOCALE</replaceable> is of the standard Java form. 
                <application>doctorj</application> is distributed with three
                word lists: words.en_CA (Canadian English), words.en_UK (United
                Kingdom English), and words.en_US (United States
                English).</para>

            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>--verbose</option></term>
            <listitem>

                <para>Produces debugging output. Note that this signficantly
                impedes performance.</para>

            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>--source</option><replaceable>=VERSION</replaceable></term>
            <listitem>

                <para>Sets the source version, which is used to determine the
                type of grammar with which to parse the input files. 
                <replaceable>VERSION</replaceable> may be 1.3, 1.4, or 1.5. The
                default is 1.4.</para>

            </listitem>
        </varlistentry>

        <varlistentry>
            <term><option>FILE</option></term>
             <listitem>
 
                <para>Specifies the files to check. If the argument specified is
                a directory, all files ending in <quote>.java</quote> under that
                directory will be analyzed.</para>

            </listitem>
        </varlistentry>

    </variablelist>

</refsect1>

<refsect1>
    <title>Examples</title>

    <para>To check a single file:
    <screen>% doctorj String.java</screen></para>

    <para>To check multiple files:
    <screen>% doctorj String.java StringBuffer.java Object.java</screen></para>

    <para>To check all files below a directory:
    <screen>% doctorj /proj/app/src</screen></para>

    <para>To run at the maximum warning level:
    <screen>% doctorj --warning=4 .</screen></para>

    <para>To specify a different dictionary:
    <screen>% doctorj --dictionaries=/usr/share/dict/words .</screen></para>

</refsect1>

<refsect1>
    <title>Configuration</title>

    <para><option>$HOME/.doctorjrc</option></para>

    <para>The run-control file, of the form:
          <screen>
    emacs: true
    warning: 4
    tabwidth: 8
    dictionaries: /usr/share/dict/words,/home/me/etc/terms
    verbose: false
         </screen>
    </para>

    <para>Dictionary (word list) files contain one word per line, for example:</para>
    <para>
        <screen>
    adaxial
    cepaceous
    sabaton
    vespiaries
    eujifferous
        </screen>
    </para>

</refsect1>

<refsect1>
    <title>Author</title>
    <para>Jeff Pace<email>jpace@incava.org</email></para>

    <para>The DoctorJ web site is at
        <ulink url="http://www.incava.org/projects/java/doctorj"></ulink>.
    </para>
</refsect1>

<refsect1>
    <title>Bugs</title>

    <para>Bugs and issues should be reported to the author:
        Jeff Pace<email>jpace@incava.org</email>
        <ulink url="http://www.sf.net/projects/doctorj">http://www.sf.net/projects/doctorj</ulink>
    </para>
</refsect1>

<refsect1>
    <title>See Also</title>

    <para>
        <citerefentry>
        <refentrytitle>java</refentrytitle>
        <manvolnum>1</manvolnum>
        </citerefentry>,

        <citerefentry>
        <refentrytitle>javadoc</refentrytitle>
        <manvolnum>1</manvolnum>
        </citerefentry>
    </para>
</refsect1>

<refsect1>
    <title>Copyright</title>

    <para>Copyright (c) 2002-2006, Jeff Pace. All Rights Reserved. This module
    is free software. It may be used, redistributed and/or modified under the
    terms of the <ulink url="http://www.gnu.org/licenses/lgpl.html">GNU Lesser
    General Public License</ulink></para>

    <para>Copyright (c) 2003, InfoEther, LLC. All rights reserved. This product
    includes software developed in part by support from the Defense Advanced
    Research Project Agency (DARPA).</para>
</refsect1>

</refentry>
